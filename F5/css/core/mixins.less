.transform(@rest...) {
    -webkit-transform: @rest;
    -moz-transform: @rest;
    -ms-transform: @rest;
    -o-transform: @rest;
    transform: @rest;
}

.transition(@rules) {
    -webkit-transition: @rules;
    -moz-transition: @rules;
    -ms-transition: @rules;
    -o-transition: @rules;
    transition: @rules;
}

.vertical-align (@position) {
    position: @position;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    -o-transform: translateY(-50%);
    transform: translateY(-50%);
}

.shadows (@string: 0 2px 5px 0 rgba(0,0,0,0.16), @string: 0 2px 10px 0 rgba(0,0,0,0.12)) {
    -webkit-box-shadow: @string, @string;
    -moz-box-shadow: @string, @string;
    box-shadow: @string, @string;
}

.shadow (@string: 0 2px 5px rgba(0,0,0,.26)) {
    -webkit-box-shadow: @string;
    -moz-box-shadow: @string;
    box-shadow: @string;
}

.no-shadow (@string: none) {
    -webkit-box-shadow: @string;
    -moz-box-shadow: @string;
    box-shadow: @string;
}

.screen-min(@minWidth; @rules) {
    @media all and (min-width: @minWidth) {
        @rules();
    }
}

.screen-max(@maxWidth; @rules) {
    @media all and (max-width: @maxWidth) {
        @rules();
    }
}

.screen(@minWidth; @maxWidth; @rules) {
    @media all and (min-width: @minWidth) and (max-width: @maxWidth) {
        @rules();
    }
}